<%= render(@layout.new(facet_field: @facet_field)) do |component| %>
  <% component.with_label do %>
    <%= @facet_field.label %>
  <% end %>

  <% component.with_body do %>
    <div class="limit_content range_limit <%= @facet_field.key %>-config blrl-plot-config"
        data-chart-segment-border-color="<%= range_config[:chart_segment_border_color] %>"
        data-chart-segment-bg-color="<%= range_config[:chart_segment_bg_color] %>"
        data-chart-replaces-text="<%= range_config[:chart_replaces_text] %>"
    >
      <% if @facet_field.selected_range_facet_item %>
        <%= render BlacklightRangeLimit::RangeSegmentsComponent.new(facet_field: @facet_field, facet_items: [@facet_field.selected_range_facet_item], classes: ['current', 'mb-3']) %>
      <% end %>

      <!-- no results profile if missing is selected -->
      <% unless @facet_field.missing_selected? %>
        <!-- this has to be on page if you want calculated facets to show up, JS sniffs it. -->
        <div class="profile mb-3">
          <% if (min = @facet_field.min) &&
                (max = @facet_field.max) %>

            <% if range_config[:segments] != false %>
              <div class="distribution subsection <%= 'chart_js' unless range_config[:chart_js] == false %>">
                <!-- if  we already fetched segments from solr, display them
                     here. Otherwise, display a link to fetch them, which JS
                     will AJAX fetch.  -->
                <% if @facet_field.range_queries.any? %>
                  <%= render BlacklightRangeLimit::RangeSegmentsComponent.new(facet_field: @facet_field) %>
                <% else %>
                  <%= link_to(t('blacklight.range_limit.view_distribution'), range_limit_url(range_start: min, range_end: max), class: "load_distribution", "data-loading-message-html": t('blacklight.range_limit.loading_html')) %>
                <% end %>
              </div>
            <% end %>
          <% end %>
        </div>

        <%= render BlacklightRangeLimit::RangeFormComponent.new(facet_field: @facet_field, classes: @classes) %>

        <% if @facet_field.missing_facet_item && !request.xhr? && range_config[:segments] != false %>
          <%= render BlacklightRangeLimit::RangeSegmentsComponent.new(facet_field: @facet_field, facet_items: [@facet_field.missing_facet_item], classes: ['missing', 'subsection', 'mt-3']) %>
        <% end %>
      <% end %>
    </div>
  <% end %>
<% end %>
